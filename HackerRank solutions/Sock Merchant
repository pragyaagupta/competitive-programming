#include <bits/stdc++.h>

using namespace std;

vector<string> split_string(string);

// Complete the sockMerchant function below.
void swap(int *xp, int *yp)  
{  
    int temp = *xp;  
    *xp = *yp;  
    *yp = temp;  
}  
int sockMerchant(int n, vector<int> ar) {
       
       int i,j,count=0;
      for (i = 0; i < n-1; i++){     
    for (j = 0; j < n-i-1; j++) { 
        if (ar[j] > ar[j+1])  
            swap(&ar[j], &ar[j+1]);  
    }
      }

    for(i=0;i<n;i++){
        if(ar[i]==ar[i+1]){
            count++;
            i++;
            
        }
       
    }
    return count;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    string ar_temp_temp;
    getline(cin, ar_temp_temp);

    vector<string> ar_temp = split_string(ar_temp_temp);

    vector<int> ar(n);

    for (int i = 0; i < n; i++) {
        int ar_item = stoi(ar_temp[i]);

        ar[i] = ar_item;
    }

    int result = sockMerchant(n, ar);

    fout << result << "\n";

    fout.close();

    return 0;
}
